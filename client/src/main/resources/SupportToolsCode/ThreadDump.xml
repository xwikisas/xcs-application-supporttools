<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="SupportToolsCode.ThreadDump" locale="">
  <web>SupportToolsCode</web>
  <name>ThreadDump</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1596708452000</creationDate>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1596708452000</date>
  <contentUpdateDate>1596708452000</contentUpdateDate>
  <version>1.1</version>
  <title>Thread Dump</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{groovy}}
import java.lang.management.ManagementFactory

def tmxB = ManagementFactory.getThreadMXBean();
def threadDump = tmxB.dumpAllThreads(true,true);

  println("{{{")
println("Thread Dump: "+ new Date())
println("")
int n=threadDump.length;
for(int i=0; i&lt;n; i++) {
    println(" \"" + threadDump[i].getThreadName()  + "\" " + threadDump[i].threadState);
  if (!threadDump[i].getThreadName().contains("SupportToolsCode/ThreadDump")) {
    def stackTrace = threadDump[i].stackTrace;
    def l =stackTrace.length;
    for(int j=0; j&lt;l; j++) {
        def frame = stackTrace[j]
        StringBuilder b = new StringBuilder();
        b.append("   ");
        b.append(frame.getClassName()).append('.').append(frame.methodName);
        if(frame.isNativeMethod()) {
            b.append("(Native)");
        } else {
            String filename = frame.fileName;
            if(filename!=null) b.append(frame.fileName).append(':').append(frame.lineNumber);
        }
        println(b);
    }
  }
  println();
}
  
  println("}}}")
{{/groovy}}</content>
</xwikidoc>
